
./Setup.hs,15
main main1,2

./test/Spec.hs,30
main main0,1
main main1,2

./examples/sandpit.hs,85
module Main Main1,2
arg, main main6,7
arg,arg6,7
arg arg7,8
main main12,13

./src/AlgebraicPrelude.hs,1398
module AlgebraicPreludeAlgebraicPrelude48,49
type Rational Rational134,135
fromInteger fromInteger139,140
fromInteger fromInteger140,141
fromInteger' fromInteger'148,149
fromInteger' fromInteger'149,150
fromRational fromRational151,152
fromRational fromRational152,153
normaliseUnit normaliseUnit159,160
normaliseUnit normaliseUnit160,161
(^)^163,164
(^(164,165
(^^)^^167,168
ifThenElse ifThenElse171,172
ifThenElse ifThenElse172,173
newtype WrapNum WrapNum190,191
newtype WrapNum a = WrapNum WrapNum190,191
newtype WrapNum a = WrapNum { unwrapNum unwrapNum190,191
instance instance193,194
newtype WrapFractional WrapFractional262,263
newtype WrapFractional a = WrapFractional WrapFractional262,263
newtype WrapFractional a = WrapFractional { unwrapFractional unwrapFractional262,263
newtype WrapIntegral WrapIntegral367,368
newtype WrapIntegral a = WrapIntegral WrapIntegral367,368
newtype WrapIntegral a = WrapIntegral { unwrapIntegral unwrapIntegral367,368
newtype WrapAlgebra WrapAlgebra485,486
newtype WrapAlgebra a = WrapAlgebra WrapAlgebra485,486
newtype WrapAlgebra a = WrapAlgebra { unwrapAlgebra unwrapAlgebra485,486
newtype Add Add545,546
newtype Add a = Add Add545,546
newtype Add a = Add { runAdd runAdd545,546
newtype Mult Mult576,577
newtype Mult a = Mult Mult576,577
newtype Mult a = Mult { runMult runMult576,577
