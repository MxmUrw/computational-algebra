
./Setup.hs,15
main main1,2

./app/Main.hs,52
module Main Main0,1
main main4,5
main main5,6

./test/Spec.hs,30
main main0,1
main main1,2

./src/Algebra/Normed.hs,218
module Algebra.Normed Algebra.Normed2,3
class (Ord (Norm a)) => Normed Normed6,7
class (Ord (Norm a)) => Normed Normed6,7
  type Norm Norm7,8
  norm norm8,9
  liftNorm liftNorm9,10
instance instance19,20

./src/Algebra/Field/Prime.hs,643
module Algebra.Field.PrimeAlgebra.Field.Prime5,6
newtype F F35,36
newtype F (p :: k) = F F35,36
newtype F (p :: k) = F { runF runF35,36
instance instance39,40
modNat modNat42,43
modNat modNat43,44
modNat' modNat'46,47
modNat' modNat'47,48
reifyPrimeField reifyPrimeField52,53
reifyPrimeField reifyPrimeField53,54
withPrimeField withPrimeField55,56
withPrimeField withPrimeField56,57
naturalRepr naturalRepr58,59
naturalRepr naturalRepr59,60
proxyF proxyF61,62
proxyF proxyF62,63
pows pows92,93
pows pows93,94
modRat modRat229,230
modRat modRat230,231
modRat' modRat'233,234
modRat' modRat'234,235

./src/Algebra/Field/Finite.hs,276
module Algebra.Field.Finite Algebra.Field.Finite4,5
class (Field k, Characteristic k) => FiniteField FiniteField10,11
class (Field k, Characteristic k) => FiniteField FiniteField10,11
  power power11,12
  elements elements12,13
order order14,15
order order15,16

./src/Algebra/Internal.hs,576
module Algebra.InternalAlgebra.Internal5,6
import import49,50
toProxy toProxy62,63
toProxy toProxy63,64
type Sized Sized65,66
type Sized n n65,66
type Sized' Sized'66,67
coerceLength coerceLength68,69
coerceLength coerceLength69,70
type SNat SNat71,72
type SNat (n(71,72
sizedLength sizedLength73,74
sizedLength sizedLength74,75
padVecs padVecs76,77
padVecs padVecs78,79
type family family103,104
type family Flipped Flipped103,104
pattern pattern107,108
sNatToInt sNatToInt109,110
sNatToInt sNatToInt110,111
instance instance112,113

./src/Algebra/Arithmetic.hs,610
module Algebra.ArithmeticAlgebra.Arithmetic1,2
data PrimeResult PrimeResult13,14
data PrimeResult = Composite Composite13,14
data PrimeResult = Composite | ProbablyPrime ProbablyPrime13,14
data PrimeResult = Composite | ProbablyPrime | PrimePrime13,14
repeatedSquare repeatedSquare17,18
repeatedSquare repeatedSquare18,19
binRep binRep22,23
binRep binRep23,24
fermatTest fermatTest29,30
fermatTest fermatTest30,31
modPow modPow39,40
modPow modPow40,41
splitFactor splitFactor45,46
splitFactor splitFactor46,47
isPseudoPrime isPseudoPrime56,57
isPseudoPrime isPseudoPrime58,59

./src/Algebra/Ring/Ideal.hs,689
module Algebra.Ring.Ideal Algebra.Ring.Ideal5,6
newtype Ideal Ideal20,21
newtype Ideal r = Ideal Ideal20,21
isEmptyIdeal isEmptyIdeal24,25
isEmptyIdeal isEmptyIdeal25,26
instance instance27,28
addToIdeal addToIdeal30,31
addToIdeal addToIdeal31,32
toIdeal toIdeal37,38
toIdeal toIdeal38,39
appendIdeal appendIdeal40,41
appendIdeal appendIdeal41,42
generators generators43,44
generators generators44,45
filterIdeal filterIdeal46,47
filterIdeal filterIdeal47,48
principalIdeal principalIdeal49,50
principalIdeal principalIdeal50,51
mapIdeal mapIdeal52,53
mapIdeal mapIdeal53,54
someSizedIdeal someSizedIdeal56,57
someSizedIdeal someSizedIdeal57,58

./src/Algebra/Ring/Polynomial/Class.hs,5315
module Algebra.Ring.Polynomial.ClassAlgebra.Ring.Polynomial.Class6,7
class    (DecidableZero r, Ring r, Commutative r, Eq r) => CoeffRing CoeffRing60,61
   => IsPolynomial IsPolynomial69,70
            => (Coefficient Coefficient99,100
  type Coefficient Coefficient72,73
  type Coefficient poly poly72,73
  type Arity Arity74,75
  type Arity poly poly74,75
  liftMap liftMap78,79
  liftMap liftMap80,81
  subst subst88,89
  subst subst90,91
  substWith substWith98,99
  substWith substWith100,101
  sArity' sArity'107,108
  sArity' sArity'108,109
  sArity sArity111,112
  sArity sArity112,113
  arity arity116,117
  arity arity117,118
  injectCoeff injectCoeff121,122
  injectCoeff injectCoeff122,123
  injectCoeff' injectCoeff'126,127
  injectCoeff' injectCoeff'127,128
  monomials monomials131,132
  monomials monomials132,133
  terms' terms'137,138
  terms' terms'138,139
  coeff' coeff'146,147
  coeff' coeff'147,148
  constantTerm constantTerm151,152
  constantTerm constantTerm152,153
  fromMonomial fromMonomial156,157
  fromMonomial fromMonomial157,158
  toPolynomial' toPolynomial'161,162
  toPolynomial' toPolynomial'162,163
  polynomial' polynomial'166,167
  polynomial' polynomial'167,168
  totalDegree' totalDegree'172,173
  totalDegree' totalDegree'173,174
  var var177,178
  var var178,179
  mapCoeff' mapCoeff'181,182
  mapCoeff' mapCoeff'182,183
  (>|*)>|*185,186
  m m186,187
  (*|<)*|<189,190
  (*(190,191
  (!*)!*192,193
  _Terms' _Terms'196,197
  _Terms' _Terms'197,198
  mapMonomial mapMonomial200,201
  mapMonomial mapMonomial201,202
class (IsMonomialOrder (Arity poly) (MOrder poly), IsPolynomial poly) => IsOrderedPolynomial IsOrderedPolynomial206,207
class (IsMonomialOrder (Arity poly) (MOrder poly), IsPolynomial poly) => IsOrderedPolynomial IsOrderedPolynomial206,207
  type MOrder MOrder207,208
  type MOrder poly poly207,208
  coeff coeff211,212
  coeff coeff212,213
  terms terms218,219
  terms terms219,220
  leadingTerm leadingTerm222,223
  leadingTerm leadingTerm223,224
  leadingMonomial leadingMonomial227,228
  leadingMonomial leadingMonomial228,229
  leadingCoeff leadingCoeff232,233
  leadingCoeff leadingCoeff233,234
  orderedMonomials orderedMonomials238,239
  orderedMonomials orderedMonomials239,240
  fromOrderedMonomial fromOrderedMonomial243,244
  fromOrderedMonomial fromOrderedMonomial244,245
  toPolynomial toPolynomial248,249
  toPolynomial toPolynomial249,250
  polynomial polynomial257,258
  polynomial polynomial259,260
  (>*)>*263,264
  (*<)*<268,269
  _Terms _Terms272,273
  _Terms _Terms273,274
  diff diff279,280
  diff diff280,281
  mapMonomialMonotonic mapMonomialMonotonic296,297
liftMapCoeff liftMapCoeff300,301
liftMapCoeff liftMapCoeff301,302
substCoeff substCoeff304,305
substCoeff substCoeff305,306
oneNorm oneNorm309,310
oneNorm oneNorm311,312
maxNorm maxNorm315,316
maxNorm maxNorm316,317
monoize monoize321,322
monoize monoize323,324
sPolynomial sPolynomial328,329
sPolynomial sPolynomial331,332
pDivModPoly pDivModPoly336,337
f0 `pDivModPoly`pDivModPoly339,340
content content355,356
content content356,357
pp pp361,362
pp pp362,363
injectVars injectVars365,366
injectVars injectVars365,366
vars vars373,374
vars vars374,375
class (P.Show r) => PrettyCoeff PrettyCoeff377,378
class (P.Show r) => PrettyCoeff PrettyCoeff377,378
  showsCoeff showsCoeff378,379
  showsCoeff showsCoeff379,380
defaultShowsOrdCoeff defaultShowsOrdCoeff381,382
defaultShowsOrdCoeff defaultShowsOrdCoeff383,384
instance instance390,391
data ShowSCoeff ShowSCoeff455,456
data ShowSCoeff = Negative Negative455,456
                | VanishedVanished456,457
                | OneCoeffOneCoeff457,458
                | Positive Positive458,459
showsCoeffAsTerm showsCoeffAsTerm467,468
showsCoeffAsTerm showsCoeffAsTerm468,469
showsCoeffWithOp showsCoeffWithOp480,481
showsCoeffWithOp showsCoeffWithOp481,482
showPolynomialWith showPolynomialWith486,487
showPolynomialWith showPolynomialWith491,492
showPolynomialWith' showPolynomialWith'493,494
showPolynomialWith' showPolynomialWith'500,501
showsPolynomialWith showsPolynomialWith502,503
showsPolynomialWith showsPolynomialWith507,508
showsPolynomialWith' showsPolynomialWith'509,510
showsPolynomialWith' showsPolynomialWith'521,522
divModPolynomial divModPolynomial552,553
divModPolynomial divModPolynomial555,556
modPolynomial modPolynomial570,571
modPolynomial modPolynomial572,573
divPolynomial divPolynomial575,576
divPolynomial divPolynomial577,578
isUnitDefault isUnitDefault583,584
isUnitDefault isUnitDefault585,586
recipUnitDefault recipUnitDefault587,588
recipUnitDefault recipUnitDefault589,590
isAssociateDefault isAssociateDefault593,594
isAssociateDefault isAssociateDefault595,596
splitUnitDefault splitUnitDefault600,601
splitUnitDefault splitUnitDefault602,603
convertPolynomial convertPolynomial610,611
convertPolynomial convertPolynomial615,616
convertPolynomial' convertPolynomial'622,623
convertPolynomial' convertPolynomial'627,628
mapPolynomial mapPolynomial633,634
mapPolynomial mapPolynomial636,637

./src/Algebra/Ring/Polynomial/Monomial.hs,3958
module Algebra.Ring.Polynomial.MonomialAlgebra.Ring.Polynomial.Monomial9,10
type Monomial Monomial55,56
type Monomial n n55,56
newtype OrderedMonomial OrderedMonomial58,59
  OrderedMonomial OrderedMonomial59,60
  OrderedMonomial { getMonomial getMonomial59,60
fromList fromList66,67
fromList fromList67,68
instance instance69,70
type MonomialOrder MonomialOrder79,80
isRelativelyPrime isRelativelyPrime81,82
isRelativelyPrime isRelativelyPrime82,83
totalDegree totalDegree84,85
totalDegree totalDegree85,86
lex lex89,90
lex lex90,91
revlex revlex94,95
revlex revlex95,96
graded graded99,100
graded graded100,101
grlex grlex107,108
grlex grlex108,109
grevlex grevlex112,113
grevlex grevlex113,114
grevlexHW grevlexHW116,117
grevlexHW grevlexHW117,118
class IsOrder IsOrder151,152
class IsOrder IsOrder151,152
  cmpMonomial cmpMonomial152,153
data Lex Lex157,158
data Lex = LexLex157,158
data Revlex Revlex161,162
data Revlex = RevlexRevlex161,162
data Grevlex Grevlex165,166
data Grevlex = GrevlexGrevlex165,166
data Grlex Grlex169,170
data Grlex = GrlexGrlex169,170
newtype Graded Graded173,174
newtype Graded ord = Graded Graded173,174
data ProductOrder ProductOrder182,183
data ProductOrder (n n182,183
data ProductOrder (n :: Nat) (m m182,183
data ProductOrder (n :: Nat) (m :: Nat) (a a182,183
data ProductOrder (n :: Nat) (m :: Nat) (a :: Type) (b b182,183
  ProductOrder ProductOrder183,184
data ProductOrder (n n182,183
productOrder productOrder185,186
productOrder productOrder187,188
productOrder' productOrder'198,199
productOrder' productOrder'200,201
type WeightProxy WeightProxy204,205
type WeightProxy (v(204,205
data WeightOrder WeightOrder206,207
data WeightOrder (v v206,207
data WeightOrder (v :: [Nat]) (ord ord206,207
  WeightOrder WeightOrder207,208
  WeightOrder :: SList (v v207,208
data WeightOrder (v v206,207
calcOrderWeight calcOrderWeight209,210
calcOrderWeight calcOrderWeight211,212
calcOrderWeight' calcOrderWeight'214,215
calcOrderWeight' calcOrderWeight'215,216
weightOrder weightOrder220,221
weightOrder weightOrder222,223
class IsOrder n name => IsMonomialOrder IsMonomialOrder255,256
class IsOrder n name => IsMonomialOrder IsMonomialOrder255,256
lcmMonomial lcmMonomial267,268
lcmMonomial lcmMonomial268,269
gcdMonomial gcdMonomial270,271
gcdMonomial gcdMonomial271,272
divs divs274,275
(OrderedMonomial xs) `divs`divs275,276
isPowerOf isPowerOf277,278
OrderedMonomial n `isPowerOf`isPowerOf278,279
tryDiv tryDiv283,284
varMonom varMonom288,289
varMonom varMonom289,290
class (IsMonomialOrder n ord, KnownNat n) => EliminationType EliminationType294,295
type EliminationOrder EliminationOrder302,303
eliminationOrder eliminationOrder304,305
eliminationOrder eliminationOrder305,306
sOnes sOnes308,309
sOnes sOnes309,310
weightedEliminationOrder weightedEliminationOrder311,312
weightedEliminationOrder weightedEliminationOrder312,313
type WeightedEliminationOrder WeightedEliminationOrder315,316
  OrderedMonomial m `compare`compare320,321
castMonomial castMonomial326,327
castMonomial castMonomial327,328
scastMonomial scastMonomial329,330
scastMonomial scastMonomial330,331
changeMonomialOrder changeMonomialOrder332,333
changeMonomialOrder changeMonomialOrder333,334
changeMonomialOrderProxy changeMonomialOrderProxy335,336
changeMonomialOrderProxy changeMonomialOrderProxy336,337
class    (IsMonomialOrder n ord) => IsMonomialOrder' IsMonomialOrder'338,339
type IsStrongMonomialOrder IsStrongMonomialOrder345,346
type IsStrongMonomialOrder ord ord345,346
withStrongMonomialOrder withStrongMonomialOrder347,348
withStrongMonomialOrder withStrongMonomialOrder350,351
cmpAnyMonomial cmpAnyMonomial359,360
cmpAnyMonomial cmpAnyMonomial361,362
orderMonomial orderMonomial365,366
orderMonomial orderMonomial366,367

./src/Algebra/Scalar.hs,218
module Algebra.Scalar Algebra.Scalar3,4
newtype Scalar Scalar10,11
newtype Scalar r = Scalar Scalar10,11
newtype Scalar r = Scalar { runScalar runScalar10,11
(.*.).*.15,16
r r17,18
instance instance20,21

./src/Algebra/Instances.hs,73
module Algebra.Instances Algebra.Instances4,5
instance instance18,19
