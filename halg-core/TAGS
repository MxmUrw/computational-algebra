
./Setup.hs,15
main main1,2

./app/Main.hs,52
module Main Main0,1
main main4,5
main main5,6

./test/Spec.hs,30
main main0,1
main main1,2

./src/Algebra/Normed.hs,216
module Algebra.Normed Algebra.Normed0,1
class (Ord (Norm a)) => Normed Normed4,5
class (Ord (Norm a)) => Normed Normed4,5
  type Norm Norm5,6
  norm norm6,7
  liftNorm liftNorm7,8
instance instance9,10

./src/Algebra/Internal.hs,572
module Algebra.InternalAlgebra.Internal6,7
import import44,45
toProxy toProxy57,58
toProxy toProxy58,59
type Sized Sized60,61
type Sized n n60,61
type Sized' Sized'61,62
coerceLength coerceLength63,64
coerceLength coerceLength64,65
type SNat SNat66,67
type SNat (n(66,67
sizedLength sizedLength68,69
sizedLength sizedLength69,70
padVecs padVecs71,72
padVecs padVecs73,74
type family family98,99
type family Flipped Flipped98,99
pattern pattern102,103
sNatToInt sNatToInt111,112
sNatToInt sNatToInt112,113
instance instance114,115

./src/Algebra/Scalar.hs,218
module Algebra.Scalar Algebra.Scalar3,4
newtype Scalar Scalar10,11
newtype Scalar r = Scalar Scalar10,11
newtype Scalar r = Scalar { runScalar runScalar10,11
(.*.).*.15,16
r r17,18
instance instance20,21

./src/Algebra/Instances.hs,73
module Algebra.Instances Algebra.Instances4,5
instance instance18,19
