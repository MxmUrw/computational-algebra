
./Setup.hs,15
main main1,2

./app/Main.hs,52
module Main Main0,1
main main4,5
main main5,6

./test/Spec.hs,30
main main0,1
main main1,2

./src/Algebra/Normed.hs,220
module Algebra.Normed Algebra.Normed3,4
class (Ord (Norm a)) => Normed Normed7,8
class (Ord (Norm a)) => Normed Normed7,8
  type Norm Norm8,9
  norm norm9,10
  liftNorm liftNorm10,11
instance instance21,22

./src/Algebra/Field/Prime.hs,643
module Algebra.Field.PrimeAlgebra.Field.Prime5,6
newtype F F35,36
newtype F (p :: k) = F F35,36
newtype F (p :: k) = F { runF runF35,36
instance instance39,40
modNat modNat42,43
modNat modNat43,44
modNat' modNat'46,47
modNat' modNat'47,48
reifyPrimeField reifyPrimeField52,53
reifyPrimeField reifyPrimeField53,54
withPrimeField withPrimeField55,56
withPrimeField withPrimeField56,57
naturalRepr naturalRepr58,59
naturalRepr naturalRepr59,60
proxyF proxyF61,62
proxyF proxyF62,63
pows pows92,93
pows pows93,94
modRat modRat229,230
modRat modRat230,231
modRat' modRat'233,234
modRat' modRat'234,235

./src/Algebra/Field/Finite.hs,276
module Algebra.Field.Finite Algebra.Field.Finite4,5
class (Field k, Characteristic k) => FiniteField FiniteField10,11
class (Field k, Characteristic k) => FiniteField FiniteField10,11
  power power11,12
  elements elements12,13
order order14,15
order order15,16

./src/Algebra/Internal.hs,576
module Algebra.InternalAlgebra.Internal5,6
import import49,50
toProxy toProxy62,63
toProxy toProxy63,64
type Sized Sized65,66
type Sized n n65,66
type Sized' Sized'66,67
coerceLength coerceLength68,69
coerceLength coerceLength69,70
type SNat SNat71,72
type SNat (n(71,72
sizedLength sizedLength73,74
sizedLength sizedLength74,75
padVecs padVecs76,77
padVecs padVecs78,79
type family family103,104
type family Flipped Flipped103,104
pattern pattern107,108
sNatToInt sNatToInt109,110
sNatToInt sNatToInt110,111
instance instance112,113

./src/Algebra/Arithmetic.hs,610
module Algebra.ArithmeticAlgebra.Arithmetic1,2
data PrimeResult PrimeResult13,14
data PrimeResult = Composite Composite13,14
data PrimeResult = Composite | ProbablyPrime ProbablyPrime13,14
data PrimeResult = Composite | ProbablyPrime | PrimePrime13,14
repeatedSquare repeatedSquare17,18
repeatedSquare repeatedSquare18,19
binRep binRep22,23
binRep binRep23,24
fermatTest fermatTest29,30
fermatTest fermatTest30,31
modPow modPow39,40
modPow modPow40,41
splitFactor splitFactor45,46
splitFactor splitFactor46,47
isPseudoPrime isPseudoPrime56,57
isPseudoPrime isPseudoPrime58,59

./src/Algebra/Ring/Ideal.hs,689
module Algebra.Ring.Ideal Algebra.Ring.Ideal5,6
newtype Ideal Ideal20,21
newtype Ideal r = Ideal Ideal20,21
isEmptyIdeal isEmptyIdeal24,25
isEmptyIdeal isEmptyIdeal25,26
instance instance27,28
addToIdeal addToIdeal30,31
addToIdeal addToIdeal31,32
toIdeal toIdeal37,38
toIdeal toIdeal38,39
appendIdeal appendIdeal40,41
appendIdeal appendIdeal41,42
generators generators43,44
generators generators44,45
filterIdeal filterIdeal46,47
filterIdeal filterIdeal47,48
principalIdeal principalIdeal49,50
principalIdeal principalIdeal50,51
mapIdeal mapIdeal52,53
mapIdeal mapIdeal53,54
someSizedIdeal someSizedIdeal56,57
someSizedIdeal someSizedIdeal57,58

./src/Algebra/Ring/Polynomial/Class.hs,5315
module Algebra.Ring.Polynomial.ClassAlgebra.Ring.Polynomial.Class6,7
class    (DecidableZero r, Ring r, Commutative r, Eq r) => CoeffRing CoeffRing60,61
   => IsPolynomial IsPolynomial69,70
            => (Coefficient Coefficient99,100
  type Coefficient Coefficient72,73
  type Coefficient poly poly72,73
  type Arity Arity74,75
  type Arity poly poly74,75
  liftMap liftMap78,79
  liftMap liftMap80,81
  subst subst88,89
  subst subst90,91
  substWith substWith98,99
  substWith substWith100,101
  sArity' sArity'107,108
  sArity' sArity'108,109
  sArity sArity111,112
  sArity sArity112,113
  arity arity116,117
  arity arity117,118
  injectCoeff injectCoeff121,122
  injectCoeff injectCoeff122,123
  injectCoeff' injectCoeff'126,127
  injectCoeff' injectCoeff'127,128
  monomials monomials131,132
  monomials monomials132,133
  terms' terms'137,138
  terms' terms'138,139
  coeff' coeff'146,147
  coeff' coeff'147,148
  constantTerm constantTerm151,152
  constantTerm constantTerm152,153
  fromMonomial fromMonomial156,157
  fromMonomial fromMonomial157,158
  toPolynomial' toPolynomial'161,162
  toPolynomial' toPolynomial'162,163
  polynomial' polynomial'166,167
  polynomial' polynomial'167,168
  totalDegree' totalDegree'172,173
  totalDegree' totalDegree'173,174
  var var177,178
  var var178,179
  mapCoeff' mapCoeff'181,182
  mapCoeff' mapCoeff'182,183
  (>|*)>|*185,186
  m m186,187
  (*|<)*|<189,190
  (*(190,191
  (!*)!*192,193
  _Terms' _Terms'196,197
  _Terms' _Terms'197,198
  mapMonomial mapMonomial200,201
  mapMonomial mapMonomial201,202
class (IsMonomialOrder (Arity poly) (MOrder poly), IsPolynomial poly) => IsOrderedPolynomial IsOrderedPolynomial206,207
class (IsMonomialOrder (Arity poly) (MOrder poly), IsPolynomial poly) => IsOrderedPolynomial IsOrderedPolynomial206,207
  type MOrder MOrder207,208
  type MOrder poly poly207,208
  coeff coeff211,212
  coeff coeff212,213
  terms terms218,219
  terms terms219,220
  leadingTerm leadingTerm222,223
  leadingTerm leadingTerm223,224
  leadingMonomial leadingMonomial227,228
  leadingMonomial leadingMonomial228,229
  leadingCoeff leadingCoeff232,233
  leadingCoeff leadingCoeff233,234
  orderedMonomials orderedMonomials238,239
  orderedMonomials orderedMonomials239,240
  fromOrderedMonomial fromOrderedMonomial243,244
  fromOrderedMonomial fromOrderedMonomial244,245
  toPolynomial toPolynomial248,249
  toPolynomial toPolynomial249,250
  polynomial polynomial257,258
  polynomial polynomial259,260
  (>*)>*263,264
  (*<)*<268,269
  _Terms _Terms272,273
  _Terms _Terms273,274
  diff diff279,280
  diff diff280,281
  mapMonomialMonotonic mapMonomialMonotonic296,297
liftMapCoeff liftMapCoeff305,306
liftMapCoeff liftMapCoeff306,307
substCoeff substCoeff309,310
substCoeff substCoeff310,311
oneNorm oneNorm314,315
oneNorm oneNorm316,317
maxNorm maxNorm320,321
maxNorm maxNorm321,322
monoize monoize326,327
monoize monoize328,329
sPolynomial sPolynomial333,334
sPolynomial sPolynomial336,337
pDivModPoly pDivModPoly341,342
f0 `pDivModPoly`pDivModPoly344,345
content content360,361
content content361,362
pp pp366,367
pp pp367,368
injectVars injectVars370,371
injectVars injectVars370,371
vars vars378,379
vars vars379,380
class (P.Show r) => PrettyCoeff PrettyCoeff382,383
class (P.Show r) => PrettyCoeff PrettyCoeff382,383
  showsCoeff showsCoeff383,384
  showsCoeff showsCoeff384,385
defaultShowsOrdCoeff defaultShowsOrdCoeff386,387
defaultShowsOrdCoeff defaultShowsOrdCoeff388,389
instance instance395,396
data ShowSCoeff ShowSCoeff460,461
data ShowSCoeff = Negative Negative460,461
                | VanishedVanished461,462
                | OneCoeffOneCoeff462,463
                | Positive Positive463,464
showsCoeffAsTerm showsCoeffAsTerm472,473
showsCoeffAsTerm showsCoeffAsTerm473,474
showsCoeffWithOp showsCoeffWithOp485,486
showsCoeffWithOp showsCoeffWithOp486,487
showPolynomialWith showPolynomialWith491,492
showPolynomialWith showPolynomialWith496,497
showPolynomialWith' showPolynomialWith'498,499
showPolynomialWith' showPolynomialWith'505,506
showsPolynomialWith showsPolynomialWith507,508
showsPolynomialWith showsPolynomialWith512,513
showsPolynomialWith' showsPolynomialWith'514,515
showsPolynomialWith' showsPolynomialWith'526,527
divModPolynomial divModPolynomial557,558
divModPolynomial divModPolynomial560,561
modPolynomial modPolynomial575,576
modPolynomial modPolynomial577,578
divPolynomial divPolynomial580,581
divPolynomial divPolynomial582,583
isUnitDefault isUnitDefault588,589
isUnitDefault isUnitDefault590,591
recipUnitDefault recipUnitDefault592,593
recipUnitDefault recipUnitDefault594,595
isAssociateDefault isAssociateDefault598,599
isAssociateDefault isAssociateDefault600,601
splitUnitDefault splitUnitDefault605,606
splitUnitDefault splitUnitDefault607,608
convertPolynomial convertPolynomial615,616
convertPolynomial convertPolynomial620,621
convertPolynomial' convertPolynomial'627,628
convertPolynomial' convertPolynomial'632,633
mapPolynomial mapPolynomial638,639
mapPolynomial mapPolynomial641,642

./src/Algebra/Ring/Polynomial/Monomial.hs,3956
module Algebra.Ring.Polynomial.MonomialAlgebra.Ring.Polynomial.Monomial10,11
type Monomial Monomial52,53
type Monomial n n52,53
newtype OrderedMonomial OrderedMonomial55,56
  OrderedMonomial OrderedMonomial56,57
  OrderedMonomial { getMonomial getMonomial56,57
fromList fromList63,64
fromList fromList64,65
instance instance66,67
type MonomialOrder MonomialOrder76,77
isRelativelyPrime isRelativelyPrime78,79
isRelativelyPrime isRelativelyPrime79,80
totalDegree totalDegree81,82
totalDegree totalDegree82,83
lex lex86,87
lex lex87,88
revlex revlex91,92
revlex revlex92,93
graded graded96,97
graded graded97,98
grlex grlex104,105
grlex grlex105,106
grevlex grevlex109,110
grevlex grevlex110,111
grevlexHW grevlexHW113,114
grevlexHW grevlexHW114,115
class IsOrder IsOrder141,142
class IsOrder IsOrder141,142
  cmpMonomial cmpMonomial142,143
data Lex Lex147,148
data Lex = LexLex147,148
data Revlex Revlex151,152
data Revlex = RevlexRevlex151,152
data Grevlex Grevlex155,156
data Grevlex = GrevlexGrevlex155,156
data Grlex Grlex159,160
data Grlex = GrlexGrlex159,160
newtype Graded Graded163,164
newtype Graded ord = Graded Graded163,164
data ProductOrder ProductOrder172,173
data ProductOrder (n n172,173
data ProductOrder (n :: Nat) (m m172,173
data ProductOrder (n :: Nat) (m :: Nat) (a a172,173
data ProductOrder (n :: Nat) (m :: Nat) (a :: Type) (b b172,173
  ProductOrder ProductOrder173,174
data ProductOrder (n n172,173
productOrder productOrder175,176
productOrder productOrder177,178
productOrder' productOrder'188,189
productOrder' productOrder'190,191
type WeightProxy WeightProxy194,195
type WeightProxy (v(194,195
data WeightOrder WeightOrder196,197
data WeightOrder (v v196,197
data WeightOrder (v :: [Nat]) (ord ord196,197
  WeightOrder WeightOrder197,198
  WeightOrder :: SList (v v197,198
data WeightOrder (v v196,197
calcOrderWeight calcOrderWeight199,200
calcOrderWeight calcOrderWeight201,202
calcOrderWeight' calcOrderWeight'204,205
calcOrderWeight' calcOrderWeight'205,206
weightOrder weightOrder210,211
weightOrder weightOrder212,213
class IsOrder n name => IsMonomialOrder IsMonomialOrder245,246
class IsOrder n name => IsMonomialOrder IsMonomialOrder245,246
lcmMonomial lcmMonomial257,258
lcmMonomial lcmMonomial258,259
gcdMonomial gcdMonomial260,261
gcdMonomial gcdMonomial261,262
divs divs264,265
(OrderedMonomial xs) `divs`divs265,266
isPowerOf isPowerOf267,268
OrderedMonomial n `isPowerOf`isPowerOf268,269
tryDiv tryDiv273,274
varMonom varMonom278,279
varMonom varMonom279,280
class (IsMonomialOrder n ord, KnownNat n) => EliminationType EliminationType284,285
type EliminationOrder EliminationOrder292,293
eliminationOrder eliminationOrder294,295
eliminationOrder eliminationOrder295,296
sOnes sOnes298,299
sOnes sOnes299,300
weightedEliminationOrder weightedEliminationOrder301,302
weightedEliminationOrder weightedEliminationOrder302,303
type WeightedEliminationOrder WeightedEliminationOrder305,306
  OrderedMonomial m `compare`compare310,311
castMonomial castMonomial316,317
castMonomial castMonomial317,318
scastMonomial scastMonomial319,320
scastMonomial scastMonomial320,321
changeMonomialOrder changeMonomialOrder322,323
changeMonomialOrder changeMonomialOrder323,324
changeMonomialOrderProxy changeMonomialOrderProxy325,326
changeMonomialOrderProxy changeMonomialOrderProxy326,327
class    (IsMonomialOrder n ord) => IsMonomialOrder' IsMonomialOrder'328,329
type IsStrongMonomialOrder IsStrongMonomialOrder335,336
type IsStrongMonomialOrder ord ord335,336
withStrongMonomialOrder withStrongMonomialOrder337,338
withStrongMonomialOrder withStrongMonomialOrder340,341
cmpAnyMonomial cmpAnyMonomial349,350
cmpAnyMonomial cmpAnyMonomial351,352
orderMonomial orderMonomial355,356
orderMonomial orderMonomial356,357

./src/Algebra/Scalar.hs,218
module Algebra.Scalar Algebra.Scalar3,4
newtype Scalar Scalar10,11
newtype Scalar r = Scalar Scalar10,11
newtype Scalar r = Scalar { runScalar runScalar10,11
(.*.).*.15,16
r r17,18
instance instance20,21

./src/Algebra/Instances.hs,73
module Algebra.Instances Algebra.Instances4,5
instance instance18,19
