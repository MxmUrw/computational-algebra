image: fpco/stack-build:lts-12.2

variables:
  GIT_STRATEGY: fetch

stages:
- build
- test
- deploy

.cached_dirs: &cached-dirs
  paths:
  - '.stack-work/'
  - '.stack-root/'
  - '*/.stack-work'
  - '.apt/'
  - '.hspec-failures'

.header-ghc-84: &header-ghc-84
  variables:
    STACK_YAML: "stack-804.yaml"
    GHC: 804
  cache: 
    key: ghc-8.4
    <<: *cached-dirs

.header-ghc-86: &header-ghc-86
  variables:
    STACK_YAML: "stack-806.yaml"
    GHC: 806
  cache: 
    key: ghc-8.6
    <<: *cached-dirs

.header-ghc-86: &header-ghc-88
  variables:
    STACK_YAML: "stack-808.yaml"
    GHC: 808
  cache: 
    key: ghc-8.8
    <<: *cached-dirs

before_script:
- echo $CI_PROJECT_DIR
- export STACK_ROOT="${CI_PROJECT_DIR}/.stack-root"
- export PATH="$HOME/.local/bin:$PATH"
- export APT_DIR=$CI_PROJECT_DIR/.apt
- export APT_STATE_LISTS=$APT_DIR/lists 
- export APT_CACHE_ARCHIVES=$APT_DIR/archives
- printf "dir::state::lists    ${APT_STATE_LISTS};\ndir::cache::archives    ${APT_CACHE_ARCHIVES};\n" > /etc/apt/apt.conf
- mkdir -p "${APT_STATE_LISTS}/partial" && mkdir -p "${APT_CACHE_ARCHIVES}/partial"
- apt-get update -y -qq && apt-get install -y -qq wget
- wget ftp://jim.mathematik.uni-kl.de/repo/extra/gpg && apt-key add gpg && rm gpg
- |
  if [ ${GHC} -lt 806 ]; then
    echo "deb ftp://jim.mathematik.uni-kl.de/repo/ubuntu16 xenial main" >> /etc/apt/sources.list
  else
    echo "deb ftp://jim.mathematik.uni-kl.de/repo/ubuntu18 bionic main" >> /etc/apt/sources.list
  fi
- apt-get update -y -qq
- apt-get install -y -qq singular41 libgmp3-dev libgsl0-dev liblapack-dev
- stack upgrade
- stack setup
- export LD_LIBRARY_PATH="$(dirname $(stack path --global-pkg-db))/rts:$LD_LIBRARY_PATH"

.build-script: &build-script
  stage:  build
  script: 
  - |
    if [ -d ${STACK_ROOT} ]; then
      echo "Already exists: ${STACK_ROOT}";
      ls "$STACK_ROOT";
    else
      echo "No stack-root. copying fpco..."
      cp -r /root/.stack $STACK_ROOT;
    fi
  - stack --version
  - echo "$STACK_YAML"
  - stack setup
  - stack build --no-terminal --test --no-run-tests --coverage

.test-script: &test-script
  stage:  test
  script:
  - stack setup
  - stack --no-terminal test --no-rerun-tests --coverage

build:ghc-8.4:
  image: fpco/stack-build:lts-12.2
  <<:    *header-ghc-84
  <<:    *build-script

build:ghc-8.6:
  image: fpco/stack-build:lts-14.21
  <<:    *header-ghc-86
  <<:    *build-script

build:ghc-8.8:
  image: fpco/stack-build:lts-14.21
  <<:    *header-ghc-88
  <<:    *build-script

test:ghc-8.4:
  image: fpco/stack-build:lts-12.2
  dependencies:
  - build:ghc-8.4
  <<:    *header-ghc-84
  <<:    *test-script
  coverage: '/^\s*(\d+\s*%)\s*top-level declarations used/'

test:ghc-8.6:
  image: fpco/stack-build:lts-14.21
  dependencies:
  - build:ghc-8.6
  <<:    *header-ghc-86
  <<:    *test-script

test:ghc-8.8:
  image: fpco/stack-build:lts-14.21
  dependencies:
  - build:ghc-8.8
  <<:    *header-ghc-88
  <<:    *test-script

deploy_documents:
  only:
  - master@konn/computational-algebra
  image: fpco/stack-build:lts-12.2
  stage: deploy
  allow_failure: true
  dependencies:
  - test:ghc-8.6
  cache: 
    key: ghc-8.6
    policy: pull
    <<: *cached-dirs
  script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s) # Run ssh-agent inside build env
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_SECRET_KEY" | ssh-add - > /dev/null
  - stack build --haddock --fast --no-haddock-deps
  - git remote add github git@github.com:konn/computational-algebra.git
  - git worktree add gh-pages-devel github/gh-pages-devel
  - ln -s $(stack path --local-doc-root) ./gh-pages-devel/docs
  - cd gh-pages-devel
  - stack build --fast && stack exec -- site build
  - stack exec -- site deploy
