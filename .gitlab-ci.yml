image: fpco/stack-build:lts-12.2

.cached_dirs: &cached-dirs
  paths:
  - .stack-work/
  - .stack-root/
  - .apt/
  - .hspec-failures

.cache-ghc-80: &cache-ghc-80
  cache: 
    key: ghc-8.0
    <<: *cached-dirs

.cache-ghc-82: &cache-ghc-82
  cache: 
    key: ghc-8.2
    <<: *cached-dirs

.cache-ghc-84: &cache-ghc-84
  cache: 
    key: ghc-8.4
    <<: *cached-dirs

before_script:
- echo $CI_PROJECT_DIR
- export STACK_ROOT=${CI_PROJECT_DIR}/.stack-root
- export APT_DIR=$CI_PROJECT_DIR/.apt
- export APT_STATE_LISTS=$APT_DIR/lists 
- export APT_CACHE_ARCHIVES=$APT_DIR/archives
- export LD_LIBRARY_PATH=$STACK_ROOT/programs/x86_64-linux/ghc-8.4.3/lib/ghc-8.4.3/rts:$LD_LIBRARY_PATH
- printf "dir::state::lists    ${APT_STATE_LISTS};\ndir::cache::archives    ${APT_CACHE_ARCHIVES};\n" > /etc/apt/apt.conf
- mkdir -p "${APT_STATE_LISTS}/partial" && mkdir -p "${APT_CACHE_ARCHIVES}/partial"
- apt-get update -y -qq && apt-get install -y -qq wget
- wget ftp://jim.mathematik.uni-kl.de/repo/extra/gpg && apt-key add gpg && rm gpg
- echo "deb ftp://jim.mathematik.uni-kl.de/repo/ubuntu16 xenial main" >> /etc/apt/sources.list
- apt-get update -y -qq
- apt-get install -y -qq singular41 libgmp3-dev libgsl0-dev liblapack-dev
- stack upgrade

stages:
- build
- test

build:ghc-8.0:
  image: fpco/stack-build:lts-9.5
  stage: build
  <<:    *cache-ghc-80
  script:
  - |
    if [ -d ${STACK_ROOT} ]; then
      echo "Already exists: ${STACK_ROOT}";
      ls "$STACK_ROOT";
    else 
      cp -r /root/.stack $STACK_ROOT;
    fi
  - export STACK_YAML=stack-800.yaml
  - export STACK_ROOT=${CI_PROJECT_DIR}/.stack-root
  - export PATH=$HOME/.local/bin:$PATH
  - stack --version
  - stack setup
  - stack build --no-terminal --only-dependencies
  - stack build --no-terminal
  - stack build --no-terminal --test --only-dependencies
  artifacts:
    paths:
    - .stack-work/
    - .stack-root/
    - .apt/

build:ghc-8.2:
  image: fpco/stack-build:lts-11.4
  <<:    *cache-ghc-82
  stage: build
  script:
  - |
    if [ -d ${STACK_ROOT} ]; then
      echo "Already exists: ${STACK_ROOT}";
      ls "$STACK_ROOT";
    else 
      cp -r /root/.stack $STACK_ROOT;
    fi
  - export STACK_YAML=stack-802.yaml
  - export STACK_ROOT=${CI_PROJECT_DIR}/.stack-root
  - export PATH=$HOME/.local/bin:$PATH
  - stack --version
  - stack setup
  - stack build --no-terminal --only-dependencies
  - stack build --no-terminal
  - stack build --no-terminal --test --only-dependencies
  artifacts:
    paths:
    - .stack-work/
    - .stack-root/
    - .apt/

build:ghc-8.4:
  image: fpco/stack-build:lts-12.2
  <<:    *cache-ghc-84
  stage: build
  script:
  - |
    if [ -d ${STACK_ROOT} ]; then
      echo "Already exists: ${STACK_ROOT}";
      ls "$STACK_ROOT";
    else 
      cp -r /root/.stack $STACK_ROOT;
    fi
  - export STACK_YAML=stack-804.yaml
  - export STACK_ROOT=${CI_PROJECT_DIR}/.stack-root
  - export PATH=$HOME/.local/bin:$PATH
  - export LD_LIBRARY_PATH=$STACK_ROOT/programs/x86_64-linux/ghc-8.4.3/lib/ghc-8.4.3/rts:$LD_LIBRARY_PATH
  - stack --version
  - stack build --no-terminal
  - stack build --no-terminal --only-dependencies
  - stack build --no-terminal --test --only-dependencies
  artifacts:
    paths:
    - .stack-work/
    - .stack-root/
    - .apt/

test:ghc-8.0:
  image: fpco/stack-build:lts-9.5
  stage: test
  <<:    *cache-ghc-80
  dependencies:
  - build:ghc-8.0
  script:
  - export STACK_YAML=stack-800.yaml
  - export STACK_ROOT=${CI_PROJECT_DIR}/.stack-root
  - export PATH=$HOME/.local/bin:$PATH
  - stack --no-terminal test --no-rerun-tests --coverage

test:ghc-8.2:
  image: fpco/stack-build:lts-11.4
  stage: test
  <<:    *cache-ghc-82
  dependencies:
  - build:ghc-8.2
  script:
  - export STACK_YAML=stack-802.yaml
  - export STACK_ROOT=${CI_PROJECT_DIR}/.stack-root
  - export PATH=$HOME/.local/bin:$PATH
  - stack --no-terminal test --no-rerun-tests --coverage

test:ghc-8.4:
  image: fpco/stack-build:lts-12.2
  stage: test
  <<:    *cache-ghc-84
  dependencies:
  - build:ghc-8.4
  script:
  - export STACK_YAML=stack-804.yaml
  - export STACK_ROOT=${CI_PROJECT_DIR}/.stack-root
  - export PATH=$HOME/.local/bin:$PATH
  - export LD_LIBRARY_PATH=$STACK_ROOT/programs/x86_64-linux/ghc-8.4.3/lib/ghc-8.4.3/rts:$LD_LIBRARY_PATH
  - stack --no-terminal test --no-rerun-tests --coverage
