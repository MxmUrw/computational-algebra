name:                halg-galois-fields
version:             0.6.0.0
github:              "konn/computational-algebra"
license:             BSD3
author:              "Hiromi ISHII"
maintainer:          "konn.jinro _at_ gmail.com"
copyright:           "2018 (c) Hiromi ISHII"

extra-source-files:
- README.md
- ChangeLog.md

tested-with: |
  GHC == 8.4.3, GHC == 8.6.5, GHC == 8.8.2, GHC == 8.10.1

# Metadata used when publishing your package
synopsis:            General Galois fields, part of halg computational algebra suite.
category:            Math

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         Please see the project Web Site <https://konn.github.io/computational-algebra>

default-extensions:
- CPP
- DataKinds
- FlexibleContexts
- FlexibleInstances
- GADTs
- MultiParamTypeClasses
- NoImplicitPrelude
- OverloadedLabels
- PolyKinds
- TypeFamilies
- TypeInType
- UndecidableInstances  

dependencies:
- base >= 4.7 && < 5
- halg-core
- halg-polynomials
- algebraic-prelude
- algebra

data-dir: data

flags:
  opt-test:
    description: "Whether to build optimisation test"
    manual: true
    default: false

library:
  source-dirs: src
  ghc-options:  -Wall
  dependencies:
  - MonadRandom
  - deepseq
  - lens
  - monad-loops
  - reflection
  - singletons
  - sized
  - template-haskell
  - mono-traversable
  - vector
  - primitive
  - subcategories
  - directory
  other-modules:
  - Algebra.Field.Galois.Conway
  - Algebra.Field.Galois.Internal
  default-extensions:
  - NoImplicitPrelude

executables: {}

tests:
  halg-gf-opt-test:
    when:
    - condition: flag(opt-test)
      then:
        buildable: true
      else:
        buildable: false
    source-dirs: opt-test
    main: halg-gf-opt-test.hs
    ghc-options:
    - -Wall
    - -O2
    - -fno-hpc
    dependencies:
    - halg-core
    - halg-polynomials
    - halg-galois-fields
    - inspection-testing
    - hspec
    - vector
    - primitive
    - sized
    - subcategories

